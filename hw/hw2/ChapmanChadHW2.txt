#TCSS 445 HW#2

/* *** Homework2: Question 1 (chadtc) *** */
##### #1
CREATE TABLE Employee (
   EmployeeId INT NOT NULL #implied b/c is pk?
  ,FirstName VARCHAR(50)
  ,LastName VARCHAR(50)
  ,Gender VARCHAR(20) #be PC and non-binary?
  ,ManagerId INT #ok to be NULL
  ,EmailAddress VARCHAR(80) #NULL ok? not sure
  ,RecordCreateDate TIMESTAMP
  DEFAULT CURRENT_TIMESTAMP
  ,PRIMARY KEY(EmployeeID)
);

/* *** Homework2: Question 2 (chadtc) *** */
##### #2
CREATE TABLE Transcript (
  TranscriptId INT AUTO_INCREMENT
  ,EmployeeId INT NOT NULL
  ,ClassId INT NOT NULL
  ,Status VARCHAR(30)
  ,PRIMARY KEY(TranscriptId)
);

/* *** Homework2: Question 3 (chadtc) *** */
##### #3
CREATE TABLE Class (
   ClassId INT AUTO_INCREMENT
  ,Name VARCHAR(50)
  ,InstructorId INT #ok to be NULL ?
  ,TotalHours INT
  ,RecordCreateDate TIMESTAMP
  DEFAULT CURRENT_TIMESTAMP
  ,PRIMARY KEY(ClassID)
)
AUTO_INCREMENT=1001;

/* *** Homework2: Question 4 (chadtc) *** */
##### #4
# #from total -> credit
ALTER TABLE Class  
    CHANGE TotalHours CreditHours SMALLINT;

/* *** Homework2: Question 5 (chadtc) *** */
##### #5
#insert the data
INSERT INTO Employee (EmployeeId, FirstName, LastName, Gender, ManagerId
  ,EmailAddress) VALUES
  (106, 'Petrina', 'Tillman', 'F', NULL, 'Petrina.Tillman@company.com')
  ,(112, 'Alec', 'Wilhoit', 'M', 106, 'Alec.Wilhoit@company.com');

INSERT INTO Employee (EmployeeId, FirstName, LastName, Gender, ManagerId
  ,EmailAddress) VALUES
  (117, 'Lourie', 'Johns', 'F', 106, 'Lourie.Johns@company.com')
  ,(119, 'Florencio', 'Chaves', 'M', 112, 'Florencio.Chaves@company.com')
  ,(122, 'Tanya', 'Vanasse', 'F', 112, 'Tanya.Vanasse@company.com')
  ,(127, 'Chana', 'Thorman', 'F', 112, 'Chana.Thorman@company.com')
  ,(139, 'Geoffery', 'Sjorgren', 'M', 117, 'Geoffrey.Sjorgren@company.com')
  ,(140, 'Gorardo', 'Borrego', 'M', 117, 'Gorardo.Borrego@company.com')
  ,(142, 'Blain', 'Wishon', 'M', 117, 'Blain.Wishon@company.com')
  ,(150, 'Danita', 'Lansford', 'F', 122, 'Danita.Lansford@company.com')
;

INSERT INTO Class (Name, InstructorId, CreditHours) VALUES
  ('Customer Service 101', 119, 10)
  ,('Synergy For Dummies', 119, 20);

INSERT INTO Class (Name, InstructorId, CreditHours) VALUES
  ('Conflict Management', 112, 10)
  ,('Building Relationships', 117, 25)
  ,('Managment Essentials', 112, 40)
  ,('Office Synergy', 117, 10)
  ,('How to Succeed', 112, 10);

INSERT INTO Transcript (EmployeeId, ClassId, Status) VALUES
  (106, 1005, 'COMPLETED')
  ,(106, 1002, 'REGISTERED');

INSERT INTO Transcript (EmployeeId, ClassId, Status) VALUES
  (106, 1003, 'COMPLETED')
  ,(112, 1003, 'REGISTERED')
  ,(112, 1001, 'COMPLETED')
  ,(117, 1001, 'COMPLETED')
  ,(117, 1002, 'COMPLETED')
  ,(127, 1001, 'REGISTERED')
  ,(127, 1002, 'REGISTERED')
  ,(127, 1003, 'COMPLETED')
  ,(139, 1004, 'REGISTERED')
  ,(139, 1006, 'REGISTERED')
  ,(142, 1003, 'COMPLETED')
  ,(142, 1005, 'REGISTERED')
  ,(150, 1005, 'COMPLETED');


/* *** Homework2: Question 6 (chadtc) *** */
##### #6
#includes status also, it seems useful
SELECT ClassName
  , FirstName, LastName, Gender, Status
FROM Employee E
JOIN (
    SELECT
      Name AS ClassName,
      T.EmployeeId AS EId
      , Status
    FROM Transcript T
    LEFT JOIN chadtc.Class C
        ON T.ClassId = C.ClassId
    WHERE (C.Name LIKE '%Management%' OR C.name LIKE '%Synergy%')
    AND (Status = 'REGISTERED' OR Status = 'COMPLETED')
    ) AS CInfo

ON E.EmployeeId = CInfo.EId
ORDER BY ClassName;

/* *** Homework2: Question 7 (chadtc) *** */
##### #7
#get all ClassIds, then sum the distinct EmployeeIds, order by descending
SELECT C.Name AS ClassName
  , COUNT(DISTINCT EmployeeId)AS CountRegisteredCompleted 
FROM Class C
LEFT JOIN Transcript T
ON C.ClassId = T.ClassId
GROUP BY C.ClassId
ORDER BY CountRegisteredCompleted DESC ;

/* *** Homework2: Question 8 (chadtc) *** */
##### #8 Concatenated first and last name of all employees with columns for hours completed and hours registered, no nulls

#the one below works
SELECT CONCAT(FirstName, " ", LastName) AS Name
  , IFNULL(HoursCompleted, 0) AS HoursCompleted
  , IFNULL(HoursRegistered, 0) AS HoursRegistered
FROM Employee E
LEFT OUTER JOIN (
	SELECT EmployeeId AS Eid
		, Status
    	, SUM(CreditHours) AS HoursCompleted
    FROM chadtc.Class C
    INNER JOIN Transcript T
    ON C.ClassId = T.ClassId
    WHERE Status = 'COMPLETED'
    GROUP BY Eid) 
	AS HC
ON E.EmployeeId = HC.Eid
LEFT OUTER JOIN (
	SELECT EmployeeId
    	, Name, Status
    	, SUM(CreditHours) AS HoursRegistered
    FROM chadtc.Class CR
    INNER JOIN Transcript TR
    ON CR.ClassId = TR.ClassId
    WHERE Status = 'REGISTERED'
    GROUP BY TR.EmployeeId) 
	AS HR
ON E.EmployeeId = HR.EmployeeId
ORDER BY E.LastName ASC ;


